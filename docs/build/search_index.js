var documenterSearchIndex = {"docs":
[{"location":"#RationalGenerators","page":"RationalGenerators","title":"RationalGenerators","text":"","category":"section"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"This module provides iterators for creating positive rational numbers  without repetition.","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"Use RationalGenerator(n) to create all rational numbers of the form a//b where a and b are relatively prime and a+b ≤ n. \nUse RationalGenerator() to create all rational numbers. ","category":"page"},{"location":"#Order","page":"RationalGenerators","title":"Order","text":"","category":"section"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"The first rational number produced is 1//1. Then 1//2 and 2//1. Then, for n equal to 3 and up, we have, in increasing order,  the rational numbers of the form a//b where a+b = n and gcd(a,b) = 1. ","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"This figure illustrates the order in which rational numbers are generated:","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"(Image: )","category":"page"},{"location":"#Examples","page":"RationalGenerators","title":"Examples","text":"","category":"section"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"julia> using RationalGenerators\n\njulia> collect(RationalGenerator(5))'\n1×9 adjoint(::Vector{Rational{Int64}}) with eltype Rational{Int64}:\n 1//1  1//2  2//1  1//3  3//1  1//4  2//3  3//2  4//1\n\njulia> [r for r in RationalGenerator(7) if r < 1]'\n1×8 adjoint(::Vector{Rational{Int64}}) with eltype Rational{Int64}:\n 1//2  1//3  1//4  2//3  1//5  1//6  2//5  3//4\n\njulia> sum(RationalGenerator(9))\n8899//168\n\njulia> for r in RationalGenerator()\n            if r > 8//3\n                println(r)\n                break\n            end\n        end\n3//1\n\njulia> [t for t in RationalGenerator(20) if denominator(t) == 10]\n4-element Vector{Rational{Int64}}:\n 1//10\n 3//10\n 7//10\n 9//10","category":"page"},{"location":"#Small-Rationals","page":"RationalGenerators","title":"Small Rationals","text":"","category":"section"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"To generate rational numbers (without repetition) restricted to  the interval (0,1], use SmallRationalGenerator. ","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"SmallRationalGenerator(last_den) generates all rationals in (0,1] whose denominators are at most last_den.\nSmallRationalGenerator() generates all rationals in (0,1].","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"SmallRatGen is an abbreviation for SmallRationalGenerator.","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"The rationals are produced with successively larger denominators,  starting with 1, and then successively larger numerators. ","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"``` julia> collect(SmallRatGen(6))' 1×12 adjoint(::Vector{Rational{Int64}}) with eltype Rational{Int64}:  1//1  1//2  1//3  2//3  1//4  3//4  1//5  2//5  3//5  4//5  1//6  5//6","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"julia> [t for t in SmallRatGen(10) if denominator(t) == 9] 6-element Vector{Rational{Int64}}:  1//9  2//9  4//9  5//9  7//9  8//9  ```","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"To create rationals strictly between 0 and 1, one can do this:  ``` julia> X = (t for t in SmallRatGen(4) if t<1);","category":"page"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"julia> collect(X)' 1×5 adjoint(::Vector{Rational{Int64}}) with eltype Rational{Int64}:  1//2  1//3  2//3  1//4  3//4  ```","category":"page"},{"location":"#Negative-Argument","page":"RationalGenerators","title":"Negative Argument","text":"","category":"section"},{"location":"","page":"RationalGenerators","title":"RationalGenerators","text":"For both RationalGenerator and SmallRationalGenerator, a negative argument   creates an infinite generator.  That is, RationalGenerator(-1) has the same  effect as RationalGenerator().","category":"page"}]
}
